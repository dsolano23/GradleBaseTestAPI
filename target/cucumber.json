[
  {
    "line": 13,
    "elements": [
      {
        "start_timestamp": "2019-07-23T07:23:03.131Z",
        "before": [
          {
            "result": {
              "duration": 6165936,
              "status": "passed"
            },
            "match": {
              "location": "ScenarioContext.setUp(Scenario)"
            }
          }
        ],
        "line": 50,
        "name": "Successful create a FAQ when the FAQ from have: Create a FAQ with valid basic values",
        "description": "",
        "id": "fqas-manager---createfqas-resource---validation;successful-create-a-faq-when-the-faq-from-have:-\u003cobjectoftest\u003e;;2",
        "after": [
          {
            "result": {
              "duration": 206248,
              "status": "passed"
            },
            "match": {
              "location": "ScenarioContext.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3265208,
              "status": "passed"
            },
            "line": 42,
            "name": "The FAQ from with the data: code: validCodeValue, answer: validAnswerValue, question: validQuestionValue, link: validLinkValue",
            "match": {
              "arguments": [
                {
                  "val": "validCodeValue",
                  "offset": 34
                },
                {
                  "val": "validAnswerValue",
                  "offset": 58
                },
                {
                  "val": "validQuestionValue",
                  "offset": 86
                },
                {
                  "val": "validLinkValue",
                  "offset": 112
                }
              ],
              "location": "FAQsSteps.faqFromData(String,String,String,String)"
            },
            "keyword": "Given "
          },
          {
            "output": [
              "POST ----- Executed: - \n\t\tRequested{\n\t\t\turl\u003d\u0027/v1/faqs,\n\t\t\theaders\u003d,\n\t\t\tbody\u003d\u0027{\n\t\t\t\t\tcode\u003d\u0027validCodeValue\n\t\t\t\t\t, answer\u003d\u0027validAnswerValue\n\t\t\t\t\t, question\u003d\u0027validQuestionValue\n\t\t\t\t\t, link\u003d\u0027validLinkValue\n\t\t\t\t},\n\t\tmultipartTextBody\u003d\n\t\t}",
              "POST -----  Respond: - \n\tRespond{\n\t\t\tmethodType\u003dapplication/json\n\t\t\trequestHttpCode\u003d200\n\t\t\telapsedTime\u003d3389\n\t\t\theaders\u003d\n\t\t\t\tDate\u003dTue, 23 Jul 2019 07:23:07 GMT\n\t\t\t\tContent-Type\u003dapplication/json\n\t\t\t\tTransfer-Encoding\u003dchunked\n\t\t\t\tConnection\u003dkeep-alive\n\t\t\t\tAccess-Control-Allow-Origin\u003d*\n\t\t\t\tVary\u003dAccept-Encoding\n\t\t\tbodyContent\u003d\u0027{\n\t\t\t    \"id\": \"validIdValue\",\n\t\t\t    \"code\": \"validCodeValue\",\n\t\t\t    \"answer\": \"validAnswerValue\",\n\t\t\t    \"question\": \"validQuestionValue\",\n\t\t\t    \"link\": \"validLinkValue\"\n\t\t\t}\n\t\t}",
              "POST -- ElapsedTime: 3389"
            ],
            "result": {
              "duration": 4219164338,
              "status": "passed"
            },
            "line": 43,
            "name": "Try to create the new FAQ requestId-01",
            "match": {
              "arguments": [
                {
                  "val": "requestId-01",
                  "offset": 26
                }
              ],
              "location": "FAQsSteps.try_to_create_the_new_faq(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1906825,
              "status": "passed"
            },
            "line": 44,
            "name": "The requestId-01 Http 200 API code will be received in less than envMaxTimeoutForRespond milliseconds",
            "match": {
              "arguments": [
                {
                  "val": "requestId-01",
                  "offset": 4
                },
                {
                  "val": "200",
                  "offset": 22
                },
                {
                  "val": "envMaxTimeoutForRespond",
                  "offset": 65
                }
              ],
              "location": "ApiCommonValidations.the_api_response_is(String,int,String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 96763,
              "status": "passed"
            },
            "line": 45,
            "name": "The requestId-01 api response content will be createFAQsResponse",
            "match": {
              "arguments": [
                {
                  "val": "requestId-01",
                  "offset": 4
                },
                {
                  "val": "createFAQsResponse",
                  "offset": 46
                }
              ],
              "location": "ApiCommonValidations.the_api_response_content_will_be(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 341006570,
              "status": "passed"
            },
            "line": 46,
            "name": "The requestId-01 response of FAQ object will come with the values: id: anyValue, code: validCodeValue, answer: validAnswerValue, question: validQuestionValue, link: validLinkValue",
            "match": {
              "arguments": [
                {
                  "val": "requestId-01",
                  "offset": 4
                },
                {
                  "val": "anyValue",
                  "offset": 71
                },
                {
                  "val": "validCodeValue",
                  "offset": 87
                },
                {
                  "val": "validAnswerValue",
                  "offset": 111
                },
                {
                  "val": "validQuestionValue",
                  "offset": 139
                },
                {
                  "val": "validLinkValue",
                  "offset": 165
                }
              ],
              "location": "FAQsSteps.faqObjectRespondValidation(String,String,String,String,String,String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@FQAs"
          },
          {
            "name": "@CreateFQAs"
          },
          {
            "name": "@CreateFQAsSuccessful"
          }
        ]
      },
      {
        "start_timestamp": "2019-07-23T07:23:07.782Z",
        "before": [
          {
            "result": {
              "duration": 1361047,
              "status": "passed"
            },
            "match": {
              "location": "ScenarioContext.setUp(Scenario)"
            }
          }
        ],
        "line": 51,
        "name": "Successful create a FAQ when the FAQ from have: Create a FAQ with max code length value",
        "description": "",
        "id": "fqas-manager---createfqas-resource---validation;successful-create-a-faq-when-the-faq-from-have:-\u003cobjectoftest\u003e;;3",
        "after": [
          {
            "result": {
              "duration": 1686858,
              "status": "passed"
            },
            "match": {
              "location": "ScenarioContext.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1261349,
              "status": "passed"
            },
            "line": 42,
            "name": "The FAQ from with the data: code: equalUpperLimit, answer: validAnswerValue, question: validQuestionValue, link: validLinkValue",
            "match": {
              "arguments": [
                {
                  "val": "equalUpperLimit",
                  "offset": 34
                },
                {
                  "val": "validAnswerValue",
                  "offset": 59
                },
                {
                  "val": "validQuestionValue",
                  "offset": 87
                },
                {
                  "val": "validLinkValue",
                  "offset": 113
                }
              ],
              "location": "FAQsSteps.faqFromData(String,String,String,String)"
            },
            "keyword": "Given "
          },
          {
            "output": [
              "POST ----- Executed: - \n\t\tRequested{\n\t\t\turl\u003d\u0027/v1/faqs,\n\t\t\theaders\u003d,\n\t\t\tbody\u003d\u0027{\n\t\t\t\t\tcode\u003d\u0027IEnQgnqoTg4WRMMWHNNjAe76UhJfLfHjSYzvuCqiIXMW5WY1W08BdJVbMd03VLzd6qqr7EIupoUzySxn8TQ9m4GLE7Ucl4gkRbf2qACDz35Keo1sPxpXF4TCsIIMwWDPziULarbOT6qgXzloLJ13Lsnto3DPWUYqEVYf0YneLKDFCp3yLZElbJ676SHUi2FYPwy6hprQeWSBYHjrG7sb93CGX9be7heyhv5tYOyr5Kn4UqbjpWY4ePpN7MlKrsXzKnAjC6dsVIh7SHibHnfehEFXxCwnimXVjoo7ixTyZvum\n\t\t\t\t\t, answer\u003d\u0027validAnswerValue\n\t\t\t\t\t, question\u003d\u0027validQuestionValue\n\t\t\t\t\t, link\u003d\u0027validLinkValue\n\t\t\t\t},\n\t\tmultipartTextBody\u003d\n\t\t}",
              "POST -----  Respond: - \n\tRespond{\n\t\t\tmethodType\u003dapplication/json\n\t\t\trequestHttpCode\u003d200\n\t\t\telapsedTime\u003d1623\n\t\t\theaders\u003d\n\t\t\t\tDate\u003dTue, 23 Jul 2019 07:23:09 GMT\n\t\t\t\tContent-Type\u003dapplication/json\n\t\t\t\tTransfer-Encoding\u003dchunked\n\t\t\t\tConnection\u003dkeep-alive\n\t\t\t\tAccess-Control-Allow-Origin\u003d*\n\t\t\t\tVary\u003dAccept-Encoding\n\t\t\tbodyContent\u003d\u0027{\n\t\t\t    \"id\": \"validIdValue\",\n\t\t\t    \"code\": \"validCodeValue\",\n\t\t\t    \"answer\": \"validAnswerValue\",\n\t\t\t    \"question\": \"validQuestionValue\",\n\t\t\t    \"link\": \"validLinkValue\"\n\t\t\t}\n\t\t}",
              "POST -- ElapsedTime: 1623"
            ],
            "result": {
              "duration": 1647599195,
              "status": "passed"
            },
            "line": 43,
            "name": "Try to create the new FAQ requestId-02",
            "match": {
              "arguments": [
                {
                  "val": "requestId-02",
                  "offset": 26
                }
              ],
              "location": "FAQsSteps.try_to_create_the_new_faq(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1349541,
              "status": "passed"
            },
            "line": 44,
            "name": "The requestId-02 Http 200 API code will be received in less than envMaxTimeoutForRespond milliseconds",
            "match": {
              "arguments": [
                {
                  "val": "requestId-02",
                  "offset": 4
                },
                {
                  "val": "200",
                  "offset": 22
                },
                {
                  "val": "envMaxTimeoutForRespond",
                  "offset": 65
                }
              ],
              "location": "ApiCommonValidations.the_api_response_is(String,int,String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 183413,
              "status": "passed"
            },
            "line": 45,
            "name": "The requestId-02 api response content will be createFAQsResponse",
            "match": {
              "arguments": [
                {
                  "val": "requestId-02",
                  "offset": 4
                },
                {
                  "val": "createFAQsResponse",
                  "offset": 46
                }
              ],
              "location": "ApiCommonValidations.the_api_response_content_will_be(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: The response of FAQ object will come with the values ERROR  Received: code: 14 \u0026 Expected code \u003d\u003d: 300\n\tat org.junit.Assert.fail(Assert.java:88)\n\tat com.gdt.bdd.stepDefinition.FAQmanagement.FAQsSteps.faqObjectRespondValidation(FAQsSteps.java:111)\n\tat ✽.The requestId-02 response of FAQ object will come with the values: id: anyValue, code: equalUpperLimit, answer: validAnswerValue, question: validQuestionValue, link: validLinkValue(file:src/test/resources/features/FAQs/CreateFQAs.feature:46)\n",
              "duration": 6469914,
              "status": "failed"
            },
            "line": 46,
            "name": "The requestId-02 response of FAQ object will come with the values: id: anyValue, code: equalUpperLimit, answer: validAnswerValue, question: validQuestionValue, link: validLinkValue",
            "match": {
              "arguments": [
                {
                  "val": "requestId-02",
                  "offset": 4
                },
                {
                  "val": "anyValue",
                  "offset": 71
                },
                {
                  "val": "equalUpperLimit",
                  "offset": 87
                },
                {
                  "val": "validAnswerValue",
                  "offset": 112
                },
                {
                  "val": "validQuestionValue",
                  "offset": 140
                },
                {
                  "val": "validLinkValue",
                  "offset": 166
                }
              ],
              "location": "FAQsSteps.faqObjectRespondValidation(String,String,String,String,String,String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@FQAs"
          },
          {
            "name": "@CreateFQAs"
          },
          {
            "name": "@CreateFQAsSuccessful"
          }
        ]
      },
      {
        "start_timestamp": "2019-07-23T07:23:09.470Z",
        "before": [
          {
            "result": {
              "duration": 978566,
              "status": "passed"
            },
            "match": {
              "location": "ScenarioContext.setUp(Scenario)"
            }
          }
        ],
        "line": 52,
        "name": "Successful create a FAQ when the FAQ from have: Create a FAQ with max answer length value",
        "description": "",
        "id": "fqas-manager---createfqas-resource---validation;successful-create-a-faq-when-the-faq-from-have:-\u003cobjectoftest\u003e;;4",
        "after": [
          {
            "result": {
              "duration": 999742,
              "status": "passed"
            },
            "match": {
              "location": "ScenarioContext.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1087447,
              "status": "passed"
            },
            "line": 42,
            "name": "The FAQ from with the data: code: validCodeValue, answer: equalUpperLimit, question: validQuestionValue, link: validLinkValue",
            "match": {
              "arguments": [
                {
                  "val": "validCodeValue",
                  "offset": 34
                },
                {
                  "val": "equalUpperLimit",
                  "offset": 58
                },
                {
                  "val": "validQuestionValue",
                  "offset": 85
                },
                {
                  "val": "validLinkValue",
                  "offset": 111
                }
              ],
              "location": "FAQsSteps.faqFromData(String,String,String,String)"
            },
            "keyword": "Given "
          },
          {
            "output": [
              "POST ----- Executed: - \n\t\tRequested{\n\t\t\turl\u003d\u0027/v1/faqs,\n\t\t\theaders\u003d,\n\t\t\tbody\u003d\u0027{\n\t\t\t\t\tcode\u003d\u0027validCodeValue\n\t\t\t\t\t, answer\u003d\u0027trsmLuQ4tTBfNNUDSkONgboJIuTQrho5Q3kXve3YQE72X05RnhEhMSoEUDcXb4Tp4BAJL5xWZR9QhSBKsVFQjnRHCTlBHrfc8dv9ntvXyqAS1S83Fp4zKcio6egyM00n4g7nfDjowJrRvtf7C4mdyBhwc0yxHf2SFn0JqGwOd9k0cNXeKVBAZcURBtY2H6mSuWiBSjQGMWvKgZxNtHqQLBhjdu8rkY7i2MHC1y20fCRoG5kaLRCREzIC69wcvYw\n\t\t\t\t\t, question\u003d\u0027validQuestionValue\n\t\t\t\t\t, link\u003d\u0027validLinkValue\n\t\t\t\t},\n\t\tmultipartTextBody\u003d\n\t\t}",
              "POST -----  Respond: - \n\tRespond{\n\t\t\tmethodType\u003dapplication/json\n\t\t\trequestHttpCode\u003d200\n\t\t\telapsedTime\u003d1896\n\t\t\theaders\u003d\n\t\t\t\tDate\u003dTue, 23 Jul 2019 07:23:11 GMT\n\t\t\t\tContent-Type\u003dapplication/json\n\t\t\t\tTransfer-Encoding\u003dchunked\n\t\t\t\tConnection\u003dkeep-alive\n\t\t\t\tAccess-Control-Allow-Origin\u003d*\n\t\t\t\tVary\u003dAccept-Encoding\n\t\t\tbodyContent\u003d\u0027{\n\t\t\t    \"id\": \"validIdValue\",\n\t\t\t    \"code\": \"validCodeValue\",\n\t\t\t    \"answer\": \"validAnswerValue\",\n\t\t\t    \"question\": \"validQuestionValue\",\n\t\t\t    \"link\": \"validLinkValue\"\n\t\t\t}\n\t\t}",
              "POST -- ElapsedTime: 1896"
            ],
            "result": {
              "duration": 1916305145,
              "status": "passed"
            },
            "line": 43,
            "name": "Try to create the new FAQ requestId-03",
            "match": {
              "arguments": [
                {
                  "val": "requestId-03",
                  "offset": 26
                }
              ],
              "location": "FAQsSteps.try_to_create_the_new_faq(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 507059,
              "status": "passed"
            },
            "line": 44,
            "name": "The requestId-03 Http 200 API code will be received in less than envMaxTimeoutForRespond milliseconds",
            "match": {
              "arguments": [
                {
                  "val": "requestId-03",
                  "offset": 4
                },
                {
                  "val": "200",
                  "offset": 22
                },
                {
                  "val": "envMaxTimeoutForRespond",
                  "offset": 65
                }
              ],
              "location": "ApiCommonValidations.the_api_response_is(String,int,String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 173702,
              "status": "passed"
            },
            "line": 45,
            "name": "The requestId-03 api response content will be createFAQsResponse",
            "match": {
              "arguments": [
                {
                  "val": "requestId-03",
                  "offset": 4
                },
                {
                  "val": "createFAQsResponse",
                  "offset": 46
                }
              ],
              "location": "ApiCommonValidations.the_api_response_content_will_be(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: The response of FAQ object will come with the values ERROR  Received: answer: 16 \u0026 Expected answer \u003d\u003d: 255\n\tat org.junit.Assert.fail(Assert.java:88)\n\tat com.gdt.bdd.stepDefinition.FAQmanagement.FAQsSteps.faqObjectRespondValidation(FAQsSteps.java:121)\n\tat ✽.The requestId-03 response of FAQ object will come with the values: id: anyValue, code: validCodeValue, answer: equalUpperLimit, question: validQuestionValue, link: validLinkValue(file:src/test/resources/features/FAQs/CreateFQAs.feature:46)\n",
              "duration": 6764145,
              "status": "failed"
            },
            "line": 46,
            "name": "The requestId-03 response of FAQ object will come with the values: id: anyValue, code: validCodeValue, answer: equalUpperLimit, question: validQuestionValue, link: validLinkValue",
            "match": {
              "arguments": [
                {
                  "val": "requestId-03",
                  "offset": 4
                },
                {
                  "val": "anyValue",
                  "offset": 71
                },
                {
                  "val": "validCodeValue",
                  "offset": 87
                },
                {
                  "val": "equalUpperLimit",
                  "offset": 111
                },
                {
                  "val": "validQuestionValue",
                  "offset": 138
                },
                {
                  "val": "validLinkValue",
                  "offset": 164
                }
              ],
              "location": "FAQsSteps.faqObjectRespondValidation(String,String,String,String,String,String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@FQAs"
          },
          {
            "name": "@CreateFQAs"
          },
          {
            "name": "@CreateFQAsSuccessful"
          }
        ]
      },
      {
        "start_timestamp": "2019-07-23T07:23:11.429Z",
        "before": [
          {
            "result": {
              "duration": 1222459,
              "status": "passed"
            },
            "match": {
              "location": "ScenarioContext.setUp(Scenario)"
            }
          }
        ],
        "line": 53,
        "name": "Successful create a FAQ when the FAQ from have: Create a FAQ with max question length value",
        "description": "",
        "id": "fqas-manager---createfqas-resource---validation;successful-create-a-faq-when-the-faq-from-have:-\u003cobjectoftest\u003e;;5",
        "after": [
          {
            "result": {
              "duration": 4504188,
              "status": "passed"
            },
            "match": {
              "location": "ScenarioContext.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 386905,
              "status": "passed"
            },
            "line": 42,
            "name": "The FAQ from with the data: code: validCodeValue, answer: validAnswerValue, question: equalUpperLimit, link: validLinkValue",
            "match": {
              "arguments": [
                {
                  "val": "validCodeValue",
                  "offset": 34
                },
                {
                  "val": "validAnswerValue",
                  "offset": 58
                },
                {
                  "val": "equalUpperLimit",
                  "offset": 86
                },
                {
                  "val": "validLinkValue",
                  "offset": 109
                }
              ],
              "location": "FAQsSteps.faqFromData(String,String,String,String)"
            },
            "keyword": "Given "
          },
          {
            "output": [
              "POST ----- Executed: - \n\t\tRequested{\n\t\t\turl\u003d\u0027/v1/faqs,\n\t\t\theaders\u003d,\n\t\t\tbody\u003d\u0027{\n\t\t\t\t\tcode\u003d\u0027validCodeValue\n\t\t\t\t\t, answer\u003d\u0027validAnswerValue\n\t\t\t\t\t, question\u003d\u0027UuQnPywuCpplrhYd8eK4hiZMkD0mmmSDKQ0AxsxKU6nalefMiSfDLKUriwJmUrZehOZ4ZGoKlH2kfH2ssZebKMKlbkTOgVwkm7X0lHNogJFnDLOFXIxWXB3dQTapSdVvz7a6gbKyaUzcCQ5esa3E7RbYSFOCLzeFjP3Ts97YNWpSDlcjc6icQAIEnzK2ebUSBadpGJAhA89qglkT85eGC36IMWGw1a2wGGAlSiT7qZ5nF2oKwC65G95xIqNNs58\n\t\t\t\t\t, link\u003d\u0027validLinkValue\n\t\t\t\t},\n\t\tmultipartTextBody\u003d\n\t\t}",
              "POST -----  Respond: - \n\tRespond{\n\t\t\tmethodType\u003dapplication/json\n\t\t\trequestHttpCode\u003d200\n\t\t\telapsedTime\u003d1996\n\t\t\theaders\u003d\n\t\t\t\tDate\u003dTue, 23 Jul 2019 07:23:13 GMT\n\t\t\t\tContent-Type\u003dapplication/json\n\t\t\t\tTransfer-Encoding\u003dchunked\n\t\t\t\tConnection\u003dkeep-alive\n\t\t\t\tAccess-Control-Allow-Origin\u003d*\n\t\t\t\tVary\u003dAccept-Encoding\n\t\t\tbodyContent\u003d\u0027{\n\t\t\t    \"id\": \"validIdValue\",\n\t\t\t    \"code\": \"validCodeValue\",\n\t\t\t    \"answer\": \"validAnswerValue\",\n\t\t\t    \"question\": \"validQuestionValue\",\n\t\t\t    \"link\": \"validLinkValue\"\n\t\t\t}\n\t\t}",
              "POST -- ElapsedTime: 1996"
            ],
            "result": {
              "duration": 2019487394,
              "status": "passed"
            },
            "line": 43,
            "name": "Try to create the new FAQ requestId-04",
            "match": {
              "arguments": [
                {
                  "val": "requestId-04",
                  "offset": 26
                }
              ],
              "location": "FAQsSteps.try_to_create_the_new_faq(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1020885,
              "status": "passed"
            },
            "line": 44,
            "name": "The requestId-04 Http 200 API code will be received in less than envMaxTimeoutForRespond milliseconds",
            "match": {
              "arguments": [
                {
                  "val": "requestId-04",
                  "offset": 4
                },
                {
                  "val": "200",
                  "offset": 22
                },
                {
                  "val": "envMaxTimeoutForRespond",
                  "offset": 65
                }
              ],
              "location": "ApiCommonValidations.the_api_response_is(String,int,String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 468370,
              "status": "passed"
            },
            "line": 45,
            "name": "The requestId-04 api response content will be createFAQsResponse",
            "match": {
              "arguments": [
                {
                  "val": "requestId-04",
                  "offset": 4
                },
                {
                  "val": "createFAQsResponse",
                  "offset": 46
                }
              ],
              "location": "ApiCommonValidations.the_api_response_content_will_be(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: The response of FAQ object will come with the values ERROR  Received: question: 18 \u0026 Expected question \u003d\u003d: 255\n\tat org.junit.Assert.fail(Assert.java:88)\n\tat com.gdt.bdd.stepDefinition.FAQmanagement.FAQsSteps.faqObjectRespondValidation(FAQsSteps.java:131)\n\tat ✽.The requestId-04 response of FAQ object will come with the values: id: anyValue, code: validCodeValue, answer: validAnswerValue, question: equalUpperLimit, link: validLinkValue(file:src/test/resources/features/FAQs/CreateFQAs.feature:46)\n",
              "duration": 5962479,
              "status": "failed"
            },
            "line": 46,
            "name": "The requestId-04 response of FAQ object will come with the values: id: anyValue, code: validCodeValue, answer: validAnswerValue, question: equalUpperLimit, link: validLinkValue",
            "match": {
              "arguments": [
                {
                  "val": "requestId-04",
                  "offset": 4
                },
                {
                  "val": "anyValue",
                  "offset": 71
                },
                {
                  "val": "validCodeValue",
                  "offset": 87
                },
                {
                  "val": "validAnswerValue",
                  "offset": 111
                },
                {
                  "val": "equalUpperLimit",
                  "offset": 139
                },
                {
                  "val": "validLinkValue",
                  "offset": 162
                }
              ],
              "location": "FAQsSteps.faqObjectRespondValidation(String,String,String,String,String,String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@FQAs"
          },
          {
            "name": "@CreateFQAs"
          },
          {
            "name": "@CreateFQAsSuccessful"
          }
        ]
      },
      {
        "start_timestamp": "2019-07-23T07:23:13.475Z",
        "before": [
          {
            "result": {
              "duration": 6778966,
              "status": "passed"
            },
            "match": {
              "location": "ScenarioContext.setUp(Scenario)"
            }
          }
        ],
        "line": 54,
        "name": "Successful create a FAQ when the FAQ from have: Create a FAQ with max link length value",
        "description": "",
        "id": "fqas-manager---createfqas-resource---validation;successful-create-a-faq-when-the-faq-from-have:-\u003cobjectoftest\u003e;;6",
        "after": [
          {
            "result": {
              "duration": 4314738,
              "status": "passed"
            },
            "match": {
              "location": "ScenarioContext.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1623870,
              "status": "passed"
            },
            "line": 42,
            "name": "The FAQ from with the data: code: validCodeValue, answer: validAnswerValue, question: validQuestionValue, link: equalUpperLimit",
            "match": {
              "arguments": [
                {
                  "val": "validCodeValue",
                  "offset": 34
                },
                {
                  "val": "validAnswerValue",
                  "offset": 58
                },
                {
                  "val": "validQuestionValue",
                  "offset": 86
                },
                {
                  "val": "equalUpperLimit",
                  "offset": 112
                }
              ],
              "location": "FAQsSteps.faqFromData(String,String,String,String)"
            },
            "keyword": "Given "
          },
          {
            "output": [
              "POST ----- Executed: - \n\t\tRequested{\n\t\t\turl\u003d\u0027/v1/faqs,\n\t\t\theaders\u003d,\n\t\t\tbody\u003d\u0027{\n\t\t\t\t\tcode\u003d\u0027validCodeValue\n\t\t\t\t\t, answer\u003d\u0027validAnswerValue\n\t\t\t\t\t, question\u003d\u0027validQuestionValue\n\t\t\t\t\t, link\u003d\u0027N6n70e7uI09akYtvkoCnep7GyKDOdsE6eQLYkSkeHdZKc5a6LIF4Xk8HsChx7MSWfUufCX5jOK3W0qB82aHZMgb8dJBC3ycnqhRZmolKX6PStwgvhx5ktEjujcbwcJdnYg7LttjP5RxFc9DX7q3htWKW4kp8OoqkRqqgrR2GBFtG3AwX2q2rWX26JFVGffKDtcgfcCzv3OQ1wOS4cRODbAIF0kwhyTPcmy51vu0GXcoZ7lT2rxF2HEfcH88M8iIGlajJJezt6fjw9oTdVYrOZ4SlC6gBMrmtYGFXOwEzCfVK\n\t\t\t\t},\n\t\tmultipartTextBody\u003d\n\t\t}",
              "POST -----  Respond: - \n\tRespond{\n\t\t\tmethodType\u003dapplication/json\n\t\t\trequestHttpCode\u003d200\n\t\t\telapsedTime\u003d2576\n\t\t\theaders\u003d\n\t\t\t\tDate\u003dTue, 23 Jul 2019 07:23:15 GMT\n\t\t\t\tContent-Type\u003dapplication/json\n\t\t\t\tTransfer-Encoding\u003dchunked\n\t\t\t\tConnection\u003dkeep-alive\n\t\t\t\tAccess-Control-Allow-Origin\u003d*\n\t\t\t\tVary\u003dAccept-Encoding\n\t\t\tbodyContent\u003d\u0027{\n\t\t\t    \"id\": \"validIdValue\",\n\t\t\t    \"code\": \"validCodeValue\",\n\t\t\t    \"answer\": \"validAnswerValue\",\n\t\t\t    \"question\": \"validQuestionValue\",\n\t\t\t    \"link\": \"validLinkValue\"\n\t\t\t}\n\t\t}",
              "POST -- ElapsedTime: 2576"
            ],
            "result": {
              "duration": 2607778156,
              "status": "passed"
            },
            "line": 43,
            "name": "Try to create the new FAQ requestId-05",
            "match": {
              "arguments": [
                {
                  "val": "requestId-05",
                  "offset": 26
                }
              ],
              "location": "FAQsSteps.try_to_create_the_new_faq(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 709103,
              "status": "passed"
            },
            "line": 44,
            "name": "The requestId-05 Http 200 API code will be received in less than envMaxTimeoutForRespond milliseconds",
            "match": {
              "arguments": [
                {
                  "val": "requestId-05",
                  "offset": 4
                },
                {
                  "val": "200",
                  "offset": 22
                },
                {
                  "val": "envMaxTimeoutForRespond",
                  "offset": 65
                }
              ],
              "location": "ApiCommonValidations.the_api_response_is(String,int,String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 242087,
              "status": "passed"
            },
            "line": 45,
            "name": "The requestId-05 api response content will be createFAQsResponse",
            "match": {
              "arguments": [
                {
                  "val": "requestId-05",
                  "offset": 4
                },
                {
                  "val": "createFAQsResponse",
                  "offset": 46
                }
              ],
              "location": "ApiCommonValidations.the_api_response_content_will_be(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: The response of FAQ object will come with the values ERROR  Received: link: 14 \u0026 Expected link \u003d\u003d: 300\n\tat org.junit.Assert.fail(Assert.java:88)\n\tat com.gdt.bdd.stepDefinition.FAQmanagement.FAQsSteps.faqObjectRespondValidation(FAQsSteps.java:141)\n\tat ✽.The requestId-05 response of FAQ object will come with the values: id: anyValue, code: validCodeValue, answer: validAnswerValue, question: validQuestionValue, link: equalUpperLimit(file:src/test/resources/features/FAQs/CreateFQAs.feature:46)\n",
              "duration": 6447493,
              "status": "failed"
            },
            "line": 46,
            "name": "The requestId-05 response of FAQ object will come with the values: id: anyValue, code: validCodeValue, answer: validAnswerValue, question: validQuestionValue, link: equalUpperLimit",
            "match": {
              "arguments": [
                {
                  "val": "requestId-05",
                  "offset": 4
                },
                {
                  "val": "anyValue",
                  "offset": 71
                },
                {
                  "val": "validCodeValue",
                  "offset": 87
                },
                {
                  "val": "validAnswerValue",
                  "offset": 111
                },
                {
                  "val": "validQuestionValue",
                  "offset": 139
                },
                {
                  "val": "equalUpperLimit",
                  "offset": 165
                }
              ],
              "location": "FAQsSteps.faqObjectRespondValidation(String,String,String,String,String,String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@FQAs"
          },
          {
            "name": "@CreateFQAs"
          },
          {
            "name": "@CreateFQAsSuccessful"
          }
        ]
      },
      {
        "start_timestamp": "2019-07-23T07:23:16.152Z",
        "before": [
          {
            "result": {
              "duration": 1588267,
              "status": "passed"
            },
            "match": {
              "location": "ScenarioContext.setUp(Scenario)"
            }
          }
        ],
        "line": 91,
        "name": "Successful create a FAQ when the FAQ from have: Create a FAQ with valid basic values",
        "description": "",
        "id": "fqas-manager---createfqas-resource---validation;successful-create-a-faq-when-the-faq-from-have:-\u003cobjectoftest\u003e;;2",
        "after": [
          {
            "result": {
              "duration": 82486,
              "status": "passed"
            },
            "match": {
              "location": "ScenarioContext.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 214579,
              "status": "passed"
            },
            "line": 83,
            "name": "The FAQ from with the data: code: validCodeValue, answer: validAnswerValue, question: validQuestionValue, link: validLinkValue",
            "match": {
              "arguments": [
                {
                  "val": "validCodeValue",
                  "offset": 34
                },
                {
                  "val": "validAnswerValue",
                  "offset": 58
                },
                {
                  "val": "validQuestionValue",
                  "offset": 86
                },
                {
                  "val": "validLinkValue",
                  "offset": 112
                }
              ],
              "location": "FAQsSteps.faqFromData(String,String,String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 84,
            "name": "Try to create the new FAQ",
            "match": {},
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 85,
            "name": "Try to updated the FAQ with the values: id: anyone, code: validCodeValue, answer: validAnswerValue, question: validQuestionValue, link: validLinkValue",
            "match": {},
            "keyword": "When "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 86,
            "name": "The api response content will be createFAQsResponse",
            "match": {},
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 87,
            "name": "The response of FAQ object will come with the values: id: anyValue, code: validCodeValue, answer: validAnswerValue, question: validQuestionValue, link: validLinkValue",
            "match": {},
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@FQAs"
          },
          {
            "name": "@CreateFQAs"
          },
          {
            "name": "@CreateFQAsSuccessful"
          }
        ]
      },
      {
        "start_timestamp": "2019-07-23T07:23:16.169Z",
        "before": [
          {
            "result": {
              "duration": 1527085,
              "status": "passed"
            },
            "match": {
              "location": "ScenarioContext.setUp(Scenario)"
            }
          }
        ],
        "line": 92,
        "name": "Successful create a FAQ when the FAQ from have: Create a FAQ with max code length value",
        "description": "",
        "id": "fqas-manager---createfqas-resource---validation;successful-create-a-faq-when-the-faq-from-have:-\u003cobjectoftest\u003e;;3",
        "after": [
          {
            "result": {
              "duration": 167059,
              "status": "passed"
            },
            "match": {
              "location": "ScenarioContext.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 231387,
              "status": "passed"
            },
            "line": 83,
            "name": "The FAQ from with the data: code: validCodeValue, answer: validAnswerValue, question: validQuestionValue, link: validLinkValue",
            "match": {
              "arguments": [
                {
                  "val": "validCodeValue",
                  "offset": 34
                },
                {
                  "val": "validAnswerValue",
                  "offset": 58
                },
                {
                  "val": "validQuestionValue",
                  "offset": 86
                },
                {
                  "val": "validLinkValue",
                  "offset": 112
                }
              ],
              "location": "FAQsSteps.faqFromData(String,String,String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 84,
            "name": "Try to create the new FAQ",
            "match": {},
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 85,
            "name": "Try to updated the FAQ with the values: id: anyone, code: equalUpperLimit, answer: validAnswerValue, question: validQuestionValue, link: validLinkValue",
            "match": {},
            "keyword": "When "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 86,
            "name": "The api response content will be createFAQsResponse",
            "match": {},
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 87,
            "name": "The response of FAQ object will come with the values: id: anyValue, code: equalUpperLimit, answer: validAnswerValue, question: validQuestionValue, link: validLinkValue",
            "match": {},
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@FQAs"
          },
          {
            "name": "@CreateFQAs"
          },
          {
            "name": "@CreateFQAsSuccessful"
          }
        ]
      },
      {
        "start_timestamp": "2019-07-23T07:23:16.180Z",
        "before": [
          {
            "result": {
              "duration": 1436953,
              "status": "passed"
            },
            "match": {
              "location": "ScenarioContext.setUp(Scenario)"
            }
          }
        ],
        "line": 93,
        "name": "Successful create a FAQ when the FAQ from have: Create a FAQ with max answer length value",
        "description": "",
        "id": "fqas-manager---createfqas-resource---validation;successful-create-a-faq-when-the-faq-from-have:-\u003cobjectoftest\u003e;;4",
        "after": [
          {
            "result": {
              "duration": 56677,
              "status": "passed"
            },
            "match": {
              "location": "ScenarioContext.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 286876,
              "status": "passed"
            },
            "line": 83,
            "name": "The FAQ from with the data: code: validCodeValue, answer: validAnswerValue, question: validQuestionValue, link: validLinkValue",
            "match": {
              "arguments": [
                {
                  "val": "validCodeValue",
                  "offset": 34
                },
                {
                  "val": "validAnswerValue",
                  "offset": 58
                },
                {
                  "val": "validQuestionValue",
                  "offset": 86
                },
                {
                  "val": "validLinkValue",
                  "offset": 112
                }
              ],
              "location": "FAQsSteps.faqFromData(String,String,String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 84,
            "name": "Try to create the new FAQ",
            "match": {},
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 85,
            "name": "Try to updated the FAQ with the values: id: anyone, code: validCodeValue, answer: equalUpperLimit, question: validQuestionValue, link: validLinkValue",
            "match": {},
            "keyword": "When "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 86,
            "name": "The api response content will be createFAQsResponse",
            "match": {},
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 87,
            "name": "The response of FAQ object will come with the values: id: anyValue, code: validCodeValue, answer: equalUpperLimit, question: validQuestionValue, link: validLinkValue",
            "match": {},
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@FQAs"
          },
          {
            "name": "@CreateFQAs"
          },
          {
            "name": "@CreateFQAsSuccessful"
          }
        ]
      },
      {
        "start_timestamp": "2019-07-23T07:23:16.190Z",
        "before": [
          {
            "result": {
              "duration": 1647178,
              "status": "passed"
            },
            "match": {
              "location": "ScenarioContext.setUp(Scenario)"
            }
          }
        ],
        "line": 94,
        "name": "Successful create a FAQ when the FAQ from have: Create a FAQ with max question length value",
        "description": "",
        "id": "fqas-manager---createfqas-resource---validation;successful-create-a-faq-when-the-faq-from-have:-\u003cobjectoftest\u003e;;5",
        "after": [
          {
            "result": {
              "duration": 67590,
              "status": "passed"
            },
            "match": {
              "location": "ScenarioContext.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 244482,
              "status": "passed"
            },
            "line": 83,
            "name": "The FAQ from with the data: code: validCodeValue, answer: validAnswerValue, question: validQuestionValue, link: validLinkValue",
            "match": {
              "arguments": [
                {
                  "val": "validCodeValue",
                  "offset": 34
                },
                {
                  "val": "validAnswerValue",
                  "offset": 58
                },
                {
                  "val": "validQuestionValue",
                  "offset": 86
                },
                {
                  "val": "validLinkValue",
                  "offset": 112
                }
              ],
              "location": "FAQsSteps.faqFromData(String,String,String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 84,
            "name": "Try to create the new FAQ",
            "match": {},
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 85,
            "name": "Try to updated the FAQ with the values: id: anyone, code: validCodeValue, answer: validAnswerValue, question: equalUpperLimit, link: validLinkValue",
            "match": {},
            "keyword": "When "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 86,
            "name": "The api response content will be createFAQsResponse",
            "match": {},
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 87,
            "name": "The response of FAQ object will come with the values: id: anyValue, code: validCodeValue, answer: validAnswerValue, question: equalUpperLimit, link: validLinkValue",
            "match": {},
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@FQAs"
          },
          {
            "name": "@CreateFQAs"
          },
          {
            "name": "@CreateFQAsSuccessful"
          }
        ]
      },
      {
        "start_timestamp": "2019-07-23T07:23:16.202Z",
        "before": [
          {
            "result": {
              "duration": 4119301,
              "status": "passed"
            },
            "match": {
              "location": "ScenarioContext.setUp(Scenario)"
            }
          }
        ],
        "line": 95,
        "name": "Successful create a FAQ when the FAQ from have: Create a FAQ with max link length value",
        "description": "",
        "id": "fqas-manager---createfqas-resource---validation;successful-create-a-faq-when-the-faq-from-have:-\u003cobjectoftest\u003e;;6",
        "after": [
          {
            "result": {
              "duration": 124596,
              "status": "passed"
            },
            "match": {
              "location": "ScenarioContext.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 195824,
              "status": "passed"
            },
            "line": 83,
            "name": "The FAQ from with the data: code: validCodeValue, answer: validAnswerValue, question: validQuestionValue, link: validLinkValue",
            "match": {
              "arguments": [
                {
                  "val": "validCodeValue",
                  "offset": 34
                },
                {
                  "val": "validAnswerValue",
                  "offset": 58
                },
                {
                  "val": "validQuestionValue",
                  "offset": 86
                },
                {
                  "val": "validLinkValue",
                  "offset": 112
                }
              ],
              "location": "FAQsSteps.faqFromData(String,String,String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 84,
            "name": "Try to create the new FAQ",
            "match": {},
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 85,
            "name": "Try to updated the FAQ with the values: id: anyone, code: validCodeValue, answer: validAnswerValue, question: validQuestionValue, link: equalUpperLimit",
            "match": {},
            "keyword": "When "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 86,
            "name": "The api response content will be createFAQsResponse",
            "match": {},
            "keyword": "And "
          },
          {
            "result": {
              "status": "undefined"
            },
            "line": 87,
            "name": "The response of FAQ object will come with the values: id: anyValue, code: validCodeValue, answer: validAnswerValue, question: validQuestionValue, link: equalUpperLimit",
            "match": {},
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@SmokeTest"
          },
          {
            "name": "@FQAs"
          },
          {
            "name": "@CreateFQAs"
          },
          {
            "name": "@CreateFQAsSuccessful"
          }
        ]
      }
    ],
    "name": "FQAs Manager - CreateFQAs Resource - Validation",
    "description": "",
    "id": "fqas-manager---createfqas-resource---validation",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/FAQs/CreateFQAs.feature",
    "tags": [
      {
        "name": "@SmokeTest",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@FQAs",
        "type": "Tag",
        "location": {
          "line": 2,
          "column": 1
        }
      },
      {
        "name": "@CreateFQAs",
        "type": "Tag",
        "location": {
          "line": 3,
          "column": 1
        }
      }
    ]
  }
]